name: Next Release CI/CD

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: "23"
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - run: pnpm install

      - name: Save node_modules
        uses: actions/cache/save@v4
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

  lint-and-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm lint

      - run: pnpm format:check

  build:
    needs: lint-and-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output
          path: .vercel/output

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vercel-output
          path: .vercel/output

      - run: pnpm add -g vercel

      - name: Deploy to Vercel (Preview)
        id: vercel-deploy
        run: |
          deployment_url=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --yes)
          echo "Vercel URL: $deployment_url"
          echo "$deployment_url" > deployment_id.txt

      - name: Upload deployment ID
        uses: actions/upload-artifact@v4
        with:
          name: vercel-deployment-id
          path: deployment_id.txt

  deploy-production:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: pnpm add -g vercel

      - uses: actions/download-artifact@v4
        with:
          name: vercel-deployment-id
          path: .

      - name: Promote to Production
        run: |
          deployment_id=$(cat deployment_id.txt)
          vercel promote "$deployment_id" --token ${{ secrets.VERCEL_TOKEN }} --yes
