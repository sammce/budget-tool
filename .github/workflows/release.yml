name: Next Release CI/CD

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node-pnpm

      - run: pnpm lint

      - run: pnpm format:check

  deploy-staging:
    needs: lint-and-format
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node-pnpm

      - name: Deploy to Vercel (Preview)
        id: vercel-deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          deployment_url=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --env=Staging --yes)
          echo "$deployment_url" > deployment_id.txt

      - name: Upload deployment ID
        uses: actions/upload-artifact@v4
        with:
          name: vercel-deployment-id
          path: deployment_id.txt

  deploy-production:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node-pnpm

      - uses: actions/download-artifact@v4
        with:
          name: vercel-deployment-id
          path: .

      - name: Promote to Production
        run: |
          deployment_id=$(cat deployment_id.txt)
          vercel promote "$deployment_id" --token=${{ secrets.VERCEL_TOKEN }} --yes
