name: Next Release CI/CD

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: "23"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install vercel
        run: pnpm add -g vercel

  lint-and-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run lint
        run: pnpm lint

      - name: Check formatting
        run: pnpm format:check

  build:
    needs: lint-and-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build app
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next/

      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prebuilt --token ${{ secrets.VERCEL_TOKEN }} --yes"
          working-directory: ./
          github-token: ${{ secrets.GITHUB_TOKEN }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
        env:
          VERCEL_ENV: preview

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vercel-deployment-id
          path: .

      - name: Deploy to Vercel Production
        run: |
          deployment_id=$(cat deployment_id.txt)
          vercel promote $deployment_id --token=${{ secrets.VERCEL_TOKEN }} --yes
