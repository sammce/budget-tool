name: Deploy to Vercel Staging/Production

on:
  workflow_run:
    workflows: ["Next CI"]
    types:
      - completed
env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install && pnpm install -g vercel

      - name: Deploy to Vercel (Staging)
        run: vercel --skip-domain --token=$VERCEL_TOKEN --yes > deployment_id.txt

      - uses: actions/upload-artifact@v4
        with:
          name: vercel-deployment-id
          path: deployment_id.txt

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vercel-deployment-id
          path: .

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install && pnpm install -g vercel

      - name: Deploy to Vercel Production
        run: |
          deployment_id=$(cat deployment_id.txt)
          vercel promote $deployment_id --token=$VERCEL_TOKEN --yes
